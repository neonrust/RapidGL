#version 460 core
#include "shared.h"

layout(std430, binding = SSBO_BIND_NONEMPTY_CLUSTERS) buffer ClustersFlagsSSBO
{
	bool nonempty_clusters[];
};

layout(std430, binding = SSBO_BIND_ACTIVE_CLUSTERS) buffer ActiveClustersSSBO
{
	uint global_nonempty_count;  // here b/c it needs to be global
	uint active_clusters[];
};

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint cluster_index = gl_GlobalInvocationID.x;

	if(nonempty_clusters[cluster_index])
	{
		uint idx = atomicAdd(global_nonempty_count, 1); // TODO: add to cull_lights_args.x directly?
		active_clusters[idx] = cluster_index;
	}
}
