#version 460 core
#include "shared.h"

// ssbo
layout(std430, binding = CLUSTERS_FLAGS_SSBO_BINDING_INDEX) buffer ClustersFlagsSSBO
{
	bool clusters_flags[];
};

layout(std430, binding = UNIQUE_ACTIVE_CLUSTERS_SSBO_BINDING_INDEX) buffer UniqueActiveClustersSSBO
{
	uint unique_clusters_count;
	uint unique_clusters[];
};

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint cluster_id = gl_GlobalInvocationID.x;
	if (clusters_flags[cluster_id])
	{
		uint i = atomicAdd(unique_clusters_count, 1);
		unique_clusters[i] = cluster_id;
	}
}