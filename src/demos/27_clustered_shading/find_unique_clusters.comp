#version 460 core

// ssbo
layout(std430, binding = 0) buffer clustersFlagsSSBO
{
	bool clustersFlags[];
};

layout(std430, binding = 1) buffer uniqueActiveClustersSSBO
{
	uint uniqueClustersCount;
	uint uniqueClusters[];
};

layout(r32f, binding = 0) readonly uniform image2D depthBuffer;

// uniforms
uniform float sliceScale;
uniform float sliceBias;
uniform uvec2 tileSizeInPx;   // How many pixels a rectangular cluster takes in x and y
uniform vec3  clusterGridDim; // The fixed number of clusters in x y and z axes

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint clusterID = gl_GlobalInvocationID.x;
	if (clustersFlags[clusterID])
	{
		uint i = atomicAdd(uniqueClustersCount, 1);
		uniqueClusters[i] = clusterID;
	}
}